ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x971
  Start of program headers:          52 (bytes into file)
  Start of section headers:          832304 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         6
  Size of section headers:           40 (bytes)
  Number of section headers:         34
  Section header string table index: 33

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 000100 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 000200 005bb4 00  AX  0   0  4
  [ 3] initlevel         PROGBITS        00005cb4 005db4 000080 00   A  0   0  4
  [ 4] device_area       PROGBITS        00005d34 005e34 0000a0 00   A  0   0  4
  [ 5] sw_isr_table      PROGBITS        00005dd4 005ed4 000180 00  WA  0   0  4
  [ 6] gpio_driver_[...] PROGBITS        00005f54 006054 000024 00   A  0   0  4
  [ 7] i2c_driver_a[...] PROGBITS        00005f78 006078 000018 00   A  0   0  4
  [ 8] sensor_drive[...] PROGBITS        00005f90 006090 000038 00   A  0   0  4
  [ 9] clock_contro[...] PROGBITS        00005fc8 0060c8 00001c 00   A  0   0  4
  [10] uart_driver_[...] PROGBITS        00005fe4 0060e4 00000c 00   A  0   0  4
  [11] tbss              NOBITS          00005ff0 0060f0 000004 00 WAT  0   0  4
  [12] rodata            PROGBITS        00005ff0 0060f0 0003e8 00   A  0   0 16
  [13] _RTT_SECTION_NAME NOBITS          20000000 0066c0 0004b8 00  WA  0   0  4
  [14] .ramfunc          NOBITS          200004b8 0064d8 000008 00  WA  0   0  1
  [15] datas             PROGBITS        200004c0 0064d8 000174 00  WA  0   0  4
  [16] device_states     PROGBITS        20000634 00664c 000010 00  WA  0   0  1
  [17] k_mutex_area      PROGBITS        20000644 00665c 000050 00  WA  0   0  4
  [18] .comment          PROGBITS        00000000 0066b0 000040 01  MS  0   0  1
  [19] .debug_aranges    PROGBITS        00000000 0066f0 001640 00      0   0  8
  [20] .debug_info       PROGBITS        00000000 007d30 04aa88 00      0   0  1
  [21] .debug_abbrev     PROGBITS        00000000 0527b8 00d4ee 00      0   0  1
  [22] .debug_line       PROGBITS        00000000 05fca6 0237d6 00      0   0  1
  [23] .debug_frame      PROGBITS        00000000 08347c 003408 00      0   0  4
  [24] .debug_str        PROGBITS        00000000 086884 00d90e 01  MS  0   0  1
  [25] .debug_loc        PROGBITS        00000000 094192 0214e7 00      0   0  1
  [26] .debug_ranges     PROGBITS        00000000 0b5680 0059c0 00      0   0  8
  [27] .ARM.attributes   ARM_ATTRIBUTES  00000000 0bb040 000032 00      0   0  1
  [28] .last_section     PROGBITS        000065b4 0066ac 000004 00   A  0   0  1
  [29] bss               NOBITS          20000698 0066c0 000a5d 00  WA  0   0  8
  [30] noinit            NOBITS          20001100 0066c0 000e00 00  WA  0   0 64
  [31] .symtab           SYMTAB          00000000 0bb074 008560 10     32 1077  4
  [32] .strtab           STRTAB          00000000 0c35d4 007bbf 00      0   0  1
  [33] .shstrtab         STRTAB          00000000 0cb193 00019c 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x000100 0x00000000 0x00000000 0x063d8 0x063d8 RWE 0x10
  LOAD           0x000000 0x200004b8 0x000063d8 0x00000 0x00008 RW  0x1
  LOAD           0x0064d8 0x200004c0 0x000063e0 0x001d4 0x001d4 RW  0x4
  LOAD           0x0066ac 0x000065b4 0x000065b4 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000000 0x20000000 0x00000 0x01f00 RW  0x40
  TLS            0x0060f0 0x00005ff0 0x00005ff0 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     rom_start text initlevel device_area sw_isr_table gpio_driver_api_area i2c_driver_api_area sensor_driver_api_area clock_control_driver_api_area uart_driver_api_area rodata 
   01     .ramfunc 
   02     datas device_states k_mutex_area 
   03     .last_section 
   04     _RTT_SECTION_NAME .ramfunc bss noinit 
   05     tbss 
