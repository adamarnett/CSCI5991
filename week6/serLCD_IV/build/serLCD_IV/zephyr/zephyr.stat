ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0xc2d
  Start of program headers:          52 (bytes into file)
  Start of section headers:          811808 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         7
  Size of section headers:           40 (bytes)
  Number of section headers:         35
  Section header string table index: 34

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 000120 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 000220 005d74 00  AX  0   0  4
  [ 3] .ARM.exidx        ARM_EXIDX       00005e74 005f94 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        00005e7c 005f9c 000070 00   A  0   0  4
  [ 5] device_area       PROGBITS        00005eec 00600c 000078 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        00005f64 006084 000180 00  WA  0   0  4
  [ 7] auxdisplay_d[...] PROGBITS        000060e4 006204 00004c 00   A  0   0  4
  [ 8] gpio_driver_[...] PROGBITS        00006130 006250 000024 00   A  0   0  4
  [ 9] i2c_driver_a[...] PROGBITS        00006154 006274 000018 00   A  0   0  4
  [10] clock_contro[...] PROGBITS        0000616c 00628c 00001c 00   A  0   0  4
  [11] uart_driver_[...] PROGBITS        00006188 0062a8 00000c 00   A  0   0  4
  [12] tbss              NOBITS          00006194 0062b4 000004 00 WAT  0   0  4
  [13] rodata            PROGBITS        000061a0 0062c0 0003d8 00   A  0   0 16
  [14] _RTT_SECTION_NAME NOBITS          20000000 006880 0004b8 00  WA  0   0  4
  [15] .ramfunc          NOBITS          200004b8 006698 000008 00  WA  0   0  1
  [16] datas             PROGBITS        200004c0 006698 00014c 00  WA  0   0  4
  [17] device_states     PROGBITS        2000060c 0067e4 00000c 00  WA  0   0  1
  [18] k_mutex_area      PROGBITS        20000618 0067f0 000050 00  WA  0   0  4
  [19] .comment          PROGBITS        00000000 006844 000040 01  MS  0   0  1
  [20] .debug_aranges    PROGBITS        00000000 006888 001628 00      0   0  8
  [21] .debug_info       PROGBITS        00000000 007eb0 047d54 00      0   0  1
  [22] .debug_abbrev     PROGBITS        00000000 04fc04 00cf5e 00      0   0  1
  [23] .debug_line       PROGBITS        00000000 05cb62 022dfb 00      0   0  1
  [24] .debug_frame      PROGBITS        00000000 07f960 0034a0 00      0   0  4
  [25] .debug_str        PROGBITS        00000000 082e00 00ccdb 01  MS  0   0  1
  [26] .debug_loc        PROGBITS        00000000 08fadb 020d1f 00      0   0  1
  [27] .debug_ranges     PROGBITS        00000000 0b0800 0059e0 00      0   0  8
  [28] .ARM.attributes   ARM_ATTRIBUTES  00000000 0b61e0 000032 00      0   0  1
  [29] .last_section     PROGBITS        00006728 006840 000004 00   A  0   0  1
  [30] bss               NOBITS          20000668 006880 0009ed 00  WA  0   0  8
  [31] noinit            NOBITS          20001080 006880 000e00 00  WA  0   0 64
  [32] .symtab           SYMTAB          00000000 0b6214 008390 10     33 1055  4
  [33] .strtab           STRTAB          00000000 0be5a4 007bcf 00      0   0  1
  [34] .shstrtab         STRTAB          00000000 0c6173 0001ab 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x005f94 0x00005e74 0x00005e74 0x00008 0x00008 R   0x4
  LOAD           0x000120 0x00000000 0x00000000 0x06578 0x06578 RWE 0x10
  LOAD           0x000000 0x200004b8 0x00006578 0x00000 0x00008 RW  0x1
  LOAD           0x006698 0x200004c0 0x00006580 0x001a8 0x001a8 RW  0x4
  LOAD           0x006840 0x00006728 0x00006728 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000000 0x20000000 0x00000 0x01e80 RW  0x40
  TLS            0x0062b4 0x00006194 0x00006194 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table auxdisplay_driver_api_area gpio_driver_api_area i2c_driver_api_area clock_control_driver_api_area uart_driver_api_area rodata 
   02     .ramfunc 
   03     datas device_states k_mutex_area 
   04     .last_section 
   05     _RTT_SECTION_NAME .ramfunc bss noinit 
   06     tbss 
