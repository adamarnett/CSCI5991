ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0xc19
  Start of program headers:          52 (bytes into file)
  Start of section headers:          827176 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         7
  Size of section headers:           40 (bytes)
  Number of section headers:         35
  Section header string table index: 34

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00000000 000120 000100 00 WAX  0   0  4
  [ 2] text              PROGBITS        00000100 000220 005f60 00  AX  0   0  4
  [ 3] .ARM.exidx        ARM_EXIDX       00006060 006180 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        00006068 006188 000080 00   A  0   0  4
  [ 5] device_area       PROGBITS        000060e8 006208 0000a0 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        00006188 0062a8 000180 00  WA  0   0  4
  [ 7] auxdisplay_d[...] PROGBITS        00006308 006428 000098 00   A  0   0  4
  [ 8] gpio_driver_[...] PROGBITS        000063a0 0064c0 000024 00   A  0   0  4
  [ 9] i2c_driver_a[...] PROGBITS        000063c4 0064e4 000018 00   A  0   0  4
  [10] clock_contro[...] PROGBITS        000063dc 0064fc 00001c 00   A  0   0  4
  [11] uart_driver_[...] PROGBITS        000063f8 006518 00000c 00   A  0   0  4
  [12] tbss              NOBITS          00006404 006524 000004 00 WAT  0   0  4
  [13] rodata            PROGBITS        00006410 006530 000454 00   A  0   0 16
  [14] _RTT_SECTION_NAME NOBITS          20000000 006b80 0004b8 00  WA  0   0  4
  [15] .ramfunc          NOBITS          200004b8 006984 000008 00  WA  0   0  1
  [16] datas             PROGBITS        200004c0 006984 000174 00  WA  0   0  4
  [17] device_states     PROGBITS        20000634 006af8 000010 00  WA  0   0  1
  [18] k_mutex_area      PROGBITS        20000644 006b08 000050 00  WA  0   0  4
  [19] .comment          PROGBITS        00000000 006b5c 000040 01  MS  0   0  1
  [20] .debug_aranges    PROGBITS        00000000 006ba0 0016c0 00      0   0  8
  [21] .debug_info       PROGBITS        00000000 008260 04935b 00      0   0  1
  [22] .debug_abbrev     PROGBITS        00000000 0515bb 00d367 00      0   0  1
  [23] .debug_line       PROGBITS        00000000 05e922 0235af 00      0   0  1
  [24] .debug_frame      PROGBITS        00000000 081ed4 00360c 00      0   0  4
  [25] .debug_str        PROGBITS        00000000 0854e0 00d118 01  MS  0   0  1
  [26] .debug_loc        PROGBITS        00000000 0925f8 02155e 00      0   0  1
  [27] .debug_ranges     PROGBITS        00000000 0b3b58 005a98 00      0   0  8
  [28] .ARM.attributes   ARM_ATTRIBUTES  00000000 0b95f0 000032 00      0   0  1
  [29] .last_section     PROGBITS        00006a40 006b58 000004 00   A  0   0  1
  [30] bss               NOBITS          20000698 006b80 000a2a 00  WA  0   0  8
  [31] noinit            NOBITS          20001100 006b80 000e00 00  WA  0   0 64
  [32] .symtab           SYMTAB          00000000 0b9624 0087e0 10     33 1117  4
  [33] .strtab           STRTAB          00000000 0c1e04 007f79 00      0   0  1
  [34] .shstrtab         STRTAB          00000000 0c9d7d 0001ab 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x006180 0x00006060 0x00006060 0x00008 0x00008 R   0x4
  LOAD           0x000120 0x00000000 0x00000000 0x06864 0x06864 RWE 0x10
  LOAD           0x000000 0x200004b8 0x00006864 0x00000 0x00008 RW  0x1
  LOAD           0x006984 0x200004c0 0x0000686c 0x001d4 0x001d4 RW  0x4
  LOAD           0x006b58 0x00006a40 0x00006a40 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20000000 0x20000000 0x00000 0x01f00 RW  0x40
  TLS            0x006524 0x00006404 0x00006404 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table auxdisplay_driver_api_area gpio_driver_api_area i2c_driver_api_area clock_control_driver_api_area uart_driver_api_area rodata 
   02     .ramfunc 
   03     datas device_states k_mutex_area 
   04     .last_section 
   05     _RTT_SECTION_NAME .ramfunc bss noinit 
   06     tbss 
